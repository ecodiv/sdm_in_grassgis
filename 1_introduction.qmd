# Introduction {#sec-introduction}

This tutorial introduces a GRASS GIS tool set for species distribution modeling, and shows how to use it effectively in combination with other core modules and add-ons to predict the future potential distribution of the almond-eyed ringlet butterfly. It also includes a few examples illustrating how the GRASS GIS environment facilitates the exploration and interpretation of model results within their geographic context.

The first part focuses on the essential building blocks of creating a species distribution model, from data collection to prediction. In the second part, we’ll dive deeper into the options, choices, and parameter settings to validate and fine-tune the model.

![Potential habitat of the Almond-eyed Ringlet (*Erebia alberganus*) in the Alps. Source: Paulo van Breugel](images/habitat.jpg){#fig-habitatalps fig-align="left"}

## Using the reader

This reader guides you step by step through the species modeling process. The examples demonstrate how to execute functions via the command line [{{< fa solid terminal >}}]{.paneltabcolor}, Python scripts [{{< fa brands python >}}]{.paneltabcolor}, and the GUI dialogs [{{< fa regular window-restore >}}]{.paneltabcolor}.

While detailed explanations of the various settings and parameters are not always provided, each function includes a link to its corresponding help page. These help pages are comprehensive, and reading them is highly recommended to fully understand the choices made in the tutorial and the options available to you.

::: {.callout-tip appearance="simple" collapse="true"}
## Typographical conventions

The following typographical conventions are used in this reader:

-   [Names of databases, storage locations, file names]{.style-db}
-   [Names of GRASS data layers]{.style-data}
-   [Menu and toolbar items]{.style-menu}
-   [Name of programs, code libraries, addons]{.style-apps}
-   [Function names, parameters, variable names]{.style-function}
-   [Parameter settings, user-supplied values]{.style-parameter}
:::

Throughout the text you'll find literature references and footnotes. You are encouraged to check them out. Simply hover over the link with your mouse. You'll also find that some code includes explanatory notes. You can read these notes by clicking on the number next to the code.

If you find some errors or have suggestions for improvements, you can create an so-called issue at GitHub. To do so, click on {{< fa brands github >}} [Report an issue]{.style-menu} in the upper right corner of the page (you'll need a GitHub account). You can also send me a message using the form (see the green button in the lower right corner of this page).

## Install the software

Before diving into this reader, make sure to install GRASS GIS, Maxent, and Java. Below, you'll find a brief guide on where to download the software and how to install it. Later on, you'll also install a number of GRASS GIS addons. These provide additional functionality not yet available in the core software package.

### GRASS GIS

Visit the GRASS GIS website and navigate to the [download page](https://grass.osgeo.org/download/) for your operating system via the menu. Be sure to use the stable release (at the time of writing, this is version 8.4.0).

For Windows users, the [download page](https://grass.osgeo.org/download/windows/) offers two main options: the standalone winGRASS installer and the OSGeo4W installer. I recommend using the OSGeo4W installer, as it allows you to install a wide range of open-source geospatial software packages, including QGIS and GDAL/OGR. Additionally, it provides a more convenient way to keep your software up to date.

Note that if you already have QGIS installed on your Windows system, there’s a good chance you also have GRASS GIS installed. In that case, simply check whether you’re using the latest version.

### GRASS GIS addons {#sec-addons}

GRASS addons are modules that are not (yet) part of the core software package and therefore need to be installed separately. This can be done using the [wxGUI Extension Manager]{.style-menu} or using the command line. See @sec-usingaddons for details. In this tutorials, we'll use a number of addons, which we will install first.

::: {#exm-JWByktRMjx .hiddendiv}
:::

::: {.panel-tabset group="interface"}
## {{< fa solid terminal >}}

``` bash
# Maxent addons
g.extension extension=r.maxent.setup
g.extension extension=r.maxent.train
g.extension extension=r.maxent.predict
g.extension extension=v.maxent.swd

# Data import and processing
g.extension extension=v.in.gbif
g.extension extension=r.vif
g.extension extension=r.mess
g.extension extension=r.vect.stats
g.extension extension=v.db.pyupdate

# Stats and data visualization
g.extension extension=r.vect.stats
g.extension extension=r.boxplot
g.extension extension=v.scatterplot
```

## {{< fa brands python >}}

``` python
# Maxent addons
gs.run_command("g.extension", extension="r.maxent.setup")
gs.run_command("g.extension", extension="r.maxent.train")
gs.run_command("g.extension", extension="r.maxent.predict")
gs.run_command("g.extension", extension="v.maxent.swd")

# Data import and processing
gs.run_command("g.extension", extension="v.in.gbif")
gs.run_command("g.extension", extension="r.vif")
gs.run_command("g.extension", extension="r.mess")
gs.run_command("g.extension", extension="r.vect.stats")
gs.run_command("g.extension", extension="v.db.pyupdate")

# Stats and data visualization
gs.run_command("g.extension", extension="r.vect.stats")
gs.run_command("g.extension", extension="r.boxplot")
gs.run_command("g.extension", extension="v.scatterplot")
```

## {{< fa regular window-restore >}}

Follow the steps in the video below to install the [r.maxent.train]{.style-function} addon. Repeat this for the other addons.

{{< video "https://ecodiv.earth/share/sdm_in_grassgis/install_addons.mp4" >}}
:::

### Maxent {#sec-maxentsoftware}

Two of the addons we just installed ([r.maxent.train]{.style-function} and [r.maxent.predict]{.style-function}) use the Maxent software in the background. Download the Maxent software from the [Maxent website](https://biodiversityinformatics.amnh.org/open_source/maxent/) and extract the [Maxent.jar]{.style-apps} file. Install it into the GRASS GIS add-on directory using the [r.maxent.setup]{.style-function} module. This will allow the other add-ons to find and use it automatically.

::: {#exm-l4ovVBumNL .hiddendiv}
:::

::: {.panel-tabset group="interface"}
## {{< fa solid terminal >}}

Make sure you know where you have extracted the [Maxent.jar]{.style-file} file. You need to provide the full path below.

``` bash
r.maxent.setup maxent=path-to-file/maxent.jar
```

## {{< fa brands python >}}

Make sure you know where you have extracted the [Maxent.jar]{.style-file} file. You need to provide the full path to the [maxent]{.style-parameter}.

``` python
gs.run_command("r.maxent.setup", maxent="path-to-file/maxent.jar")
```

## {{< fa regular window-restore >}}

Open the [r.maxent.setup]{.style-function} module dialog and run it with the following parameter settings. 

| Parameter | Value                   |
|-----------|-------------------------|
| maxent    | path-to-file/maxent.jar |

Note that you can also use the browse button in the [r.maxent.setup]{.style-function} window to find the file.
:::

Note that you only have to do this once. If you already installed the Maxent.jar file, but want to update it, you can use the [-u]{.style-parameter} flag. This will replace the older version with the new one.

### Java OpenJDK

The [Maxent]{.style-apps} software requires [Java]{.style-apps} or the [Java Runtime Environment]{.style-apps} (JRE) version 1.4 or later to be installed on your computer. There is a good chance you already have [Java]{.style-apps} installed. You can check this using the step below.

::: {.panel-tabset group="os"}
## {{< fa brands linux >}}

Open the command line, and type:

``` bash
java --version
```

## {{< fa brands windows >}}

In the Window search bar, type [cmd]{.style-menu} and hit enter. This will open the Command prompt. Next, type in the following code string.

``` bash
java --version
```

## {{< fa brands apple >}}

I have no access to an Apple computer, but perhaps [this page](https://javaforge.com/how-to-find-java-path-in-mac/) can help you. Otherwise, you'll need to look it up yourself.
:::

If you have [Java]{.style-apps} on your computer, it should show you the version. If not, you'll get the message that it cannot be found. In that case, download it from e.g., [here](https://www.azul.com/downloads/#zulu) or [here](https://openjdk.org/) and install it.

Now we need to ensure that [GRASS GIS]{.style-apps} can locate the [Java]{.style-apps} executable, a prerequisite for running [Maxent]{.style-apps}. On Linux, and in some cases on Windows, GRASS may have access to [Java]{.style-apps} without further steps. You can check this using the following command.

::: {#exm-eUGszZQwy4 .hiddendiv}
:::

::: {.panel-tabset group="interface"}
## {{< fa solid terminal >}}

``` bash
r.maxent.setup -j
```

## {{< fa brands python >}}

``` python
gs.run_command("r.maxent.setup", flags="j")
```

## {{< fa regular window-restore >}}

Open the [r.maxent.setup]{.style-function} module dialog and run it with the following parameter settings.

| Parameter                                    | Value |
|----------------------------------------------|-------|
| Check if Java can be found on the system (j) | ✅    |
:::

If you see the message that [Java is accessible from GRASS GIS]{.style-output}, you can skip the rest of the steps on this page. If you get the warning that [Java cannot be found from GRASS GIS]{.style-output}, you need to find the path to the java executable. See below for suggestions for how to find this.

::: {#exm-sa2Ci8G2Aj .hiddendiv}
:::

::: {.panel-tabset group="os"}
## {{< fa brands linux >}}

Open the command line, and type the following to get the path to the java executable:

``` bash
which java
```

## {{< fa brands windows >}}

On Windows, Java is usually installed in the directory [C:/Program Files/Java]{.style-menu}. You can check if this folder exists. If the folder does not exist, we can’t be sure that Java is not installed on your computer. It could have been installed in a different path.

To find out, in the Window search bar, type [cmd]{.style-menu} and hit enter. This will open the Command prompt. Next, type in the following code string.

``` bash
where java
```

If the code above doesn't work, you can try the code below (you can also try to replace [java.exe]{.style-apps} with [javac.exe]{.style-apps}).

``` bash
for %i in (java.exe) do @echo.   %~$PATH:i
```

Alternatively, you can search for the [java.exe]{.style-apps} file on the disk. Open [My Computer]{.style-menu} where you can see [C drive]{.style-menu}, [D drive]{.style-menu} etc. On the top right corner you can see [Search bar]{.style-menu}. Enter [java.exe]{.style-apps} and hit enter. Note, this may take some time.

## {{< fa brands apple >}}

Please search online for how to find the path to the Java executable.
:::

Make sure to write down the full path to the java executable. On Windows, this could for example be [C:/Program Files/Java/java.exe]{.style-menu}. Use this as input for [r.maxent.setup](https://grass.osgeo.org/grass-stable/manuals/addons/r.maxent.setup.html).

::: {#exm-WkMBbifIZR .hiddendiv}
:::

::: {.panel-tabset group="interface"}
## {{< fa solid terminal >}}

``` bash
r.maxent.setup java=path-to-java/java.exe
```

## {{< fa brands python >}}

``` python
gs.run_command("r.maxent.setup", java="path-to-java/java.exe")
```

## {{< fa regular window-restore >}}

Open the [r.maxent.setup]{.style-function} module dialog and run it with the following parameter settings.

| Parameter | Value                 |
|-----------|-----------------------|
| java      | path-to-java/java.exe |
:::

Note that @exm-l4ovVBumNL and @exm-WkMBbifIZR can be combined in one step by providing both the [maxent]{.style-parameter} and [java]{.style-parameter} parameters to [r.maxent.setup]{.style-function} at the same time.

<!-- Read the Formbutton docs at formspree.io/formbutton/docs. See more examples at codepen.io/formspree -->

```{=html}
<script src="https://formspree.io/js/formbutton-v1.min.js" defer></script>
```

```{=html}
<script>
  /* paste this line in verbatim */
  window.formbutton=window.formbutton||function(){(formbutton.q=formbutton.q||[]).push(arguments)};
  /* customize formbutton below*/     
  formbutton("create", {
    action: "https://formspree.io/f/xjvppyvg",
    title: "Feedback", 
    fields: [
      { 
        type: "email", 
        label: "Email:", 
        name: "email",
        required: true,
        placeholder: "your@email.com"
      },
      {
        type: "hidden",
        label: "",
        value: "sdmingrass - 1 Introduction",
      },
      {
        type: "textarea",
        label: "Message:",
        name: "message",
        placeholder: "Question or feedback? Send us a message.",
      },
      { type: "submit" }      
    ],
    styles: {
      title: {
        backgroundColor: "#57B444"
      },
      button: {
        backgroundColor: "#57B444"
      }
    }
  });
</script>
```
